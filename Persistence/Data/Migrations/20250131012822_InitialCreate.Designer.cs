// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250131012822_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.CustomerOrderPrediction", b =>
                {
                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextPredictedOrderDate")
                        .HasColumnType("datetime2");

                    b.ToTable("CustomerOrderPrediction", "dbo");
                });

            modelBuilder.Entity("Dominio.Category", b =>
                {
                    b.Property<int>("categoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryid"));

                    b.Property<string>("categoryname")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("categoryid");

                    b.HasIndex(new[] { "categoryname" }, "categoryname");

                    b.ToTable("Categories", "Production");
                });

            modelBuilder.Entity("Dominio.CustOrder", b =>
                {
                    b.Property<int?>("custid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ordermonth")
                        .HasColumnType("datetime");

                    b.Property<int?>("qty")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("CustOrders", "Sales");
                });

            modelBuilder.Entity("Dominio.Customer", b =>
                {
                    b.Property<int>("custid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("custid"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("companyname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("contactname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("contacttitle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("fax")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("postalcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("region")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("custid");

                    b.HasIndex(new[] { "city" }, "idx_nc_city");

                    b.HasIndex(new[] { "companyname" }, "idx_nc_companyname");

                    b.HasIndex(new[] { "postalcode" }, "idx_nc_postalcode");

                    b.HasIndex(new[] { "region" }, "idx_nc_region");

                    b.ToTable("Customers", "Sales");
                });

            modelBuilder.Entity("Dominio.Employee", b =>
                {
                    b.Property<int>("empid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("empid"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("datetime");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("hiredate")
                        .HasColumnType("datetime");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("mgrid")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("postalcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("region")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("titleofcourtesy")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("empid");

                    b.HasIndex("mgrid");

                    b.HasIndex(new[] { "lastname" }, "idx_nc_lastname");

                    b.HasIndex(new[] { "postalcode" }, "idx_nc_postalcode");

                    b.ToTable("Employees", "HR");
                });

            modelBuilder.Entity("Dominio.Order", b =>
                {
                    b.Property<int>("orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderid"));

                    b.Property<int?>("custid")
                        .HasColumnType("int");

                    b.Property<int>("empid")
                        .HasColumnType("int");

                    b.Property<decimal>("freight")
                        .HasColumnType("money");

                    b.Property<DateTime>("orderdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("requireddate")
                        .HasColumnType("datetime");

                    b.Property<string>("shipaddress")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("shipcity")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("shipcountry")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("shipname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("shippeddate")
                        .HasColumnType("datetime");

                    b.Property<int>("shipperid")
                        .HasColumnType("int");

                    b.Property<string>("shippostalcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("shipregion")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("orderid");

                    b.HasIndex(new[] { "custid" }, "idx_nc_custid");

                    b.HasIndex(new[] { "empid" }, "idx_nc_empid");

                    b.HasIndex(new[] { "orderdate" }, "idx_nc_orderdate");

                    b.HasIndex(new[] { "shippeddate" }, "idx_nc_shippeddate");

                    b.HasIndex(new[] { "shipperid" }, "idx_nc_shipperid");

                    b.HasIndex(new[] { "shippostalcode" }, "idx_nc_shippostalcode");

                    b.ToTable("Orders", "Sales");
                });

            modelBuilder.Entity("Dominio.OrderDetail", b =>
                {
                    b.Property<int>("orderid")
                        .HasColumnType("int");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<decimal>("discount")
                        .HasColumnType("numeric(4, 3)");

                    b.Property<short>("qty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<decimal>("unitprice")
                        .HasColumnType("money");

                    b.HasKey("orderid", "productid");

                    b.HasIndex(new[] { "orderid" }, "idx_nc_orderid");

                    b.HasIndex(new[] { "productid" }, "idx_nc_productid");

                    b.ToTable("OrderDetails", "Sales");
                });

            modelBuilder.Entity("Dominio.OrderTotalsByYear", b =>
                {
                    b.Property<int?>("orderyear")
                        .HasColumnType("int");

                    b.Property<int?>("qty")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("OrderTotalsByYear", "Sales");
                });

            modelBuilder.Entity("Dominio.OrderValue", b =>
                {
                    b.Property<int?>("custid")
                        .HasColumnType("int");

                    b.Property<int>("empid")
                        .HasColumnType("int");

                    b.Property<DateTime>("orderdate")
                        .HasColumnType("datetime");

                    b.Property<int>("orderid")
                        .HasColumnType("int");

                    b.Property<int>("shipperid")
                        .HasColumnType("int");

                    b.Property<decimal?>("val")
                        .HasColumnType("numeric(12, 2)");

                    b.ToTable((string)null);

                    b.ToView("OrderValues", "Sales");
                });

            modelBuilder.Entity("Dominio.Product", b =>
                {
                    b.Property<int>("productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productid"));

                    b.Property<int>("categoryid")
                        .HasColumnType("int");

                    b.Property<bool>("discontinued")
                        .HasColumnType("bit");

                    b.Property<string>("productname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("supplierid")
                        .HasColumnType("int");

                    b.Property<decimal>("unitprice")
                        .HasColumnType("money");

                    b.HasKey("productid");

                    b.HasIndex(new[] { "categoryid" }, "idx_nc_categoryid");

                    b.HasIndex(new[] { "productname" }, "idx_nc_productname");

                    b.HasIndex(new[] { "supplierid" }, "idx_nc_supplierid");

                    b.ToTable("Products", "Production");
                });

            modelBuilder.Entity("Dominio.Shipper", b =>
                {
                    b.Property<int>("shipperid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("shipperid"));

                    b.Property<string>("companyname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("shipperid");

                    b.ToTable("Shippers", "Sales");
                });

            modelBuilder.Entity("Dominio.Supplier", b =>
                {
                    b.Property<int>("supplierid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("supplierid"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("companyname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("contactname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("contacttitle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("fax")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("postalcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("region")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("supplierid");

                    b.HasIndex(new[] { "companyname" }, "idx_nc_companyname");

                    b.HasIndex(new[] { "postalcode" }, "idx_nc_postalcode");

                    b.ToTable("Suppliers", "Production");
                });

            modelBuilder.Entity("Dominio.Employee", b =>
                {
                    b.HasOne("Dominio.Employee", "mgr")
                        .WithMany("Inversemgr")
                        .HasForeignKey("mgrid")
                        .HasConstraintName("FK_Employees_Employees");

                    b.Navigation("mgr");
                });

            modelBuilder.Entity("Dominio.Order", b =>
                {
                    b.HasOne("Dominio.Customer", "cust")
                        .WithMany("Orders")
                        .HasForeignKey("custid")
                        .HasConstraintName("FK_Orders_Customers");

                    b.HasOne("Dominio.Employee", "emp")
                        .WithMany("Orders")
                        .HasForeignKey("empid")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Employees");

                    b.HasOne("Dominio.Shipper", "shipper")
                        .WithMany("Orders")
                        .HasForeignKey("shipperid")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Shippers");

                    b.Navigation("cust");

                    b.Navigation("emp");

                    b.Navigation("shipper");
                });

            modelBuilder.Entity("Dominio.OrderDetail", b =>
                {
                    b.HasOne("Dominio.Order", "order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("orderid")
                        .IsRequired()
                        .HasConstraintName("FK_OrderDetails_Orders");

                    b.HasOne("Dominio.Product", "product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("productid")
                        .IsRequired()
                        .HasConstraintName("FK_OrderDetails_Products");

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Dominio.Product", b =>
                {
                    b.HasOne("Dominio.Category", "category")
                        .WithMany("Products")
                        .HasForeignKey("categoryid")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Categories");

                    b.HasOne("Dominio.Supplier", "supplier")
                        .WithMany("Products")
                        .HasForeignKey("supplierid")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Suppliers");

                    b.Navigation("category");

                    b.Navigation("supplier");
                });

            modelBuilder.Entity("Dominio.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Dominio.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Dominio.Employee", b =>
                {
                    b.Navigation("Inversemgr");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Dominio.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Dominio.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Dominio.Shipper", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Dominio.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
